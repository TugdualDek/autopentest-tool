import re

class VariableManager:
    def __init__(self):
        self.variables = {}

    def set_variable(self, key, value):
        self.variables[key] = value
        #print(f"Variable set: {key} = {value}")

    def get_variable(self, key, default=None):
        value = self.variables.get(key, default)
        #print(f"Variable accessed: {key} = {value}")
        return value

    def set_variables(self, variables):
        for name, value in variables.items():
            self.set_variable(name, value)

    def resolve_variable(self, value):
        if isinstance(value, str):
            return self._resolve_string_variable(value)
        return value

    def _resolve_string_variable(self, value):
        pattern = r'\{\{\s*(.+?)\s*\}\}'
        matches = re.findall(pattern, value)
        for match in matches:
            resolved_value = self.get_variable(match.strip())
            if resolved_value is not None:
                value = value.replace('{{' + match + '}}', str(resolved_value))
        return value
